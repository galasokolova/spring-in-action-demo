spring:
  security:
    oauth2:
      client:
        registration:
          taco-admin-client:
            provider: tacocloud
            client-id: taco-admin-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:9090/login/oauth2/code/{registrationId}"
#            redirect-uri: "http://127.0.0.1:9090/login/oauth2/code/taco-admin-client"
            scope:
              - writeIngredients
              - deleteIngredients
              - openid

        provider:
          tacocloud:
            issuer-uri: http://authserver:9000  # this uri was added to /etc/hosts

#  The following lines are necessary only if the authorization server differs from the default values (page 206, chapter 8 "Spring in Action")
#            authorization-uri: http://authserver:9000/oauth2/authorize
#            token-uri: http://authserver:9000/oauth2/token
#            jwk-set-uri: http://authserver:9000/oauth2/jwks
#            user-info-uri: http://authserver:9000/userinfo
#            user-name-attribute: sub

  datasource:
    generate-unique-name: false
    name: tacocloud
    url: jdbc:h2:mem:tacocloud
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  data:
    rest:
      base-path: /api
  integration:
    management:
      default-logging-enabled: true

logging:
  level:
    root: warn
    org.springframework.security: warn

taco:
  orders:
    page-size: 10
server:
  tomcat:
    max-http-response-header-size: 64KB
  port: 9090
